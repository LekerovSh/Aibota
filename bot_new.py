# -*- coding: utf-8 -*-
import config
from telebot import types
import telebot
from weather import weatherapp
from wikiapi import wikiapp

from xml.etree import ElementTree
import requests
from telebot import TeleBot
import uuid
from TextToSpeech import t_to_s
import time

from settings import init

from ruleBasedNER import ner
from chitchat import chat
from datetime import datetime

from yandex_translate import translate
from currency import currencyapp

from youtube import youtube_search

import settings

init()

YANDEX_KEY = 'b04291f2-5e31-4c8e-af57-1695b7bd5f16'
VOICE_LANGUAGE = 'ru-RU'
MAX_MESSAGE_SIZE = 1000 * 50
MAX_MESSAGE_DURATION = 60
bot = telebot.TeleBot(config.token)
print("Start locale telegram bot")

k = types.InlineKeyboardMarkup()
button_data = {}
inweather = types.InlineKeyboardButton(text="–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã", callback_data="callback_weather")
inwikipedia = types.InlineKeyboardButton(text="–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è", callback_data="callback_wikipedia")
incurrency = types.InlineKeyboardButton(text="–ö–æ–Ω–≤–µ—Ä—Ç–æ—Ä –≤–∞–ª—é—Ç", callback_data="callback_currency")
intranslate = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", callback_data="callback_translate")
inboltun = types.InlineKeyboardButton(text="–ë–æ–ª—Ç–∞–ª–∫–∞", callback_data="callback_bl")
k.add(inweather)
k.add(inwikipedia)
k.add(incurrency)
k.add(intranslate)
k.add(inboltun)

back = types.InlineKeyboardMarkup()
back_button = types.InlineKeyboardButton(text="–°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–∏", callback_data="callback_back")
back.add(back_button)


@bot.message_handler(commands=['start'])
def for_menu(message):
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:", reply_markup=k)


def get_answer(user_input, user_date):
    ans = ""
    #####################################################################################################################
    #####################################################################################################################

    name_of_service = "No"  # —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º–µ–Ω–Ω–æ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≤–∏–∫–∏–ø–µ–¥–∏–∏—è —è —Å–æ–∑–¥–∞–ª —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

    #####################################################################################################################
    #####################################################################################################################

    # write predefined set of questions and answers here
    if user_input == u"–ü—Ä–∏–≤–µ—Ç":
        ans = u"–ü—Ä–∏–≤–µ—Ç. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?"
    elif ('–ø—Ä–∏–≤–µ—Ç' in user_input) or ('–∫–∞–∫ –¥–µ–ª–∞' in user_input):
        ans = "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?"
    elif ('—Ö–æ—Ä–æ—à–æ' in user_input) or ('—Å–∞–º–∞' in user_input):
        ans = "–†–∞–¥–∞ —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å. –£ –º–µ–Ω—è —Ç–æ–∂–µ –≤—Å–µ —Ö–æ—Ä–æ—à–æ"
    elif user_input == "/text":
        ans = "–ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±—É—é –∏–∑ –∫–æ–º–∞–Ω–¥ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å.\n- –ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ê–ª–º–∞—Ç–µ?\n- –†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ\n- –ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ –∫–æ—Ñ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n- 2 –¥–æ–ª–ª–∞—Ä–∞ –≤ —Ç–µ–Ω–≥–µ\n- –î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º, AIbota\n* –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ–∑–∞–ø—Ä–æ—Å.\n"
    elif ('—É–º–µ–µ—à—å' in user_input) or ('—É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å' in user_input):
        ans = '–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n- –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n("–ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ê–ª–º–∞—Ç–µ?") ' + u'‚õÖ' + '\n- –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã\n("–†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ") ' + u'üîç' + '\n- –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞\n("–∫–æ—Ñ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º") ' + u'üîÑ' + '\n- –£–∑–Ω–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n("–¥–æ–ª–ª–∞—Ä—ã –≤ —Ç–µ–Ω–≥–µ") ' + u'üí≤' + '\n- –°–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é\n("–î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º, AIbota") ' + u'üí¨' + "\n* –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ–∑–∞–ø—Ä–æ—Å " + u'üì£' + ".\n"
    elif (user_input == '/info') or (
            '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input or '–æ —Å–≤–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input or '–æ —Å–≤–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input):
        ans = "–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ\n [ " + u'üì£' + " ] - –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏—Ü–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∞—É–¥–∏–æ –∑–∞–ø—Ä–æ—Å—ã\n [ " + u'‚õÖ' + " –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã] - –£–∑–Ω–∞–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è(–±–ª–∏–∂–∞–π—â–∏–π —á–∞—Å), –∑–∞–≤—Ç—Ä–∞, –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ\n [ " + u'üîç' + " –≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è] - –ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏\n [ " + u'üîÑ' + " –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫] - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞\n [ " + u'üí≤' + " –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç] - –£–∑–Ω–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n [ " + u'üí¨' + " –ë–æ–ª—Ç–∞–ª–∫–∞] - –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å\n"
    else:
        serv = ner(user_input)
        print(serv[0])

        if serv[0] == "weather":
            settings.context["service"] = "weather"
            [service, city, date] = ner(user_input)
            # [service, city, date] = ner(user_input)
            #ans="connct to the api: " + service + " " + " " + city + " " + date

            ans = weatherapp(city, date, user_date)[1]
            print(city)

            if ans == "error":
                ans = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –º–µ—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
            name_of_service = "weather"  # –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–≥–æ–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service

        if (settings.context["service"] == "weather" and ("–∑–∞–≤—Ç—Ä–∞" in user_input)):
            settings.context["service"] = "weather"
            [service, city, date] = [settings.context["service"], settings.context["city"], "–∑–∞–≤—Ç—Ä–∞"]
            # [service, city, date] = ner(user_input)
            ans = "connct to the api: " + service + " " + " " + city + " " + date
            ans = weatherapp(city, date, user_date)[1]
            print(city)
            if ans == "error":
                ans = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –º–µ—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
            name_of_service = "weather"  # –µ—Å–ª–∏ —ç—Ç–æ –ø–æ–≥–æ–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service
        if serv[0] == "translate":
            settings.context["service"] = "translate"
            [service, textToTranslate, finalLangToTranslate] = ner(user_input)
            ans = translate("", finalLangToTranslate, textToTranslate)
            name_of_service = "translate"  # –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service
        if serv[0] == "currency":
            settings.context["service"] = "currency"
            [service, finalFirstCurr, finalSecondCurr, curr] = ner(user_input)
            ans = currencyapp(finalFirstCurr, finalSecondCurr, curr)
            name_of_service = "currency"  # –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä –≤–∞–ª—é—Ç –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service
        if serv[0] == "wiki":
            settings.context["service"] = "wiki"
            [service, query] = ner(user_input)
            print(query)
            ans = wikiapp(query)
            name_of_service = query + "serviceapiwikipedia"  # –µ—Å–ª–∏ —ç—Ç–æ –≤–∏–∫–∏–ø–µ–¥–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service
        if serv[0] == "youtube":
            settings.context["service"] = "youtube"
            [service, result] = ner(user_input)
            print(result)
            ans = youtube_search(result)
            name_of_service = "youtube"  # –µ—Å–ª–∏ —ç—Ç–æ –≤–∏–∫–∏–ø–µ–¥–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service
        if serv == "chitchat" and ans == "":
            settings.context["service"] = "chitchat"
            ans = chat(user_input)
            name_of_service = "chitchat"  # –µ—Å–ª–∏ —ç—Ç–æ –±–æ–ª—Ç–∞–ª–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return ans, name_of_service
    return ans, name_of_service

def get_answer_for_voice(user_input, user_date):
    ans = []
    name_of_service = "No"
    # write predefined set of questions and answers here
    if user_input == u"–ü—Ä–∏–≤–µ—Ç":

        ans = [u"–ü—Ä–∏–≤–µ—Ç. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?", u"–ü—Ä–∏–≤–µ—Ç. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?"]
    elif ('–ø—Ä–∏–≤–µ—Ç' in user_input) or ('–∫–∞–∫ –¥–µ–ª–∞' in user_input):
        ans = ["–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?", "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?"]
    elif ('—Ö–æ—Ä–æ—à–æ' in user_input) or ('—Å–∞–º–∞' in user_input):
        ans = ["–†–∞–¥–∞ —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å. –£ –º–µ–Ω—è —Ç–æ–∂–µ –≤—Å–µ —Ö–æ—Ä–æ—à–æ", "–†–∞–¥–∞ —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å. –£ –º–µ–Ω—è —Ç–æ–∂–µ –≤—Å–µ —Ö–æ—Ä–æ—à–æ"]
    elif user_input == "/start":
        ans = [
            "–ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±—É—é –∏–∑ –∫–æ–º–∞–Ω–¥ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å.\n- –ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ê–ª–º–∞—Ç–µ?\n- –†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ\n- –ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ –∫–æ—Ñ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n- 2 –¥–æ–ª–ª–∞—Ä–∞ –≤ —Ç–µ–Ω–≥–µ\n- –î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º, AIbota\n* –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ–∑–∞–ø—Ä–æ—Å.\n",
            "–ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±—É—é –∏–∑ –∫–æ–º–∞–Ω–¥ –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ. –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å.\n- –ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ê–ª–º–∞—Ç–µ?\n- –†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ\n- –ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ –∫–æ—Ñ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π\n- 2 –¥–æ–ª–ª–∞—Ä–∞ –≤ —Ç–µ–Ω–≥–µ\n- –î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º, AIbota\n* –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ–∑–∞–ø—Ä–æ—Å.\n"]
    elif ('—É–º–µ–µ—à—å' in user_input) or ('—É–º–µ–µ—à—å –¥–µ–ª–∞—Ç—å' in user_input):
        ans = [
            '–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n- –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n("–ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ê–ª–º–∞—Ç–µ?") ' + u'‚õÖ' + '\n- –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã\n("–†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ") ' + u'üîç' + '\n- –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞\n("–∫–æ—Ñ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º") ' + u'üîÑ' + '\n- –£–∑–Ω–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n("–¥–æ–ª–ª–∞—Ä—ã –≤ —Ç–µ–Ω–≥–µ") ' + u'üí≤' + '\n- –°–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é\n("–î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º, AIbota") ' + u'üí¨' + "\n* –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ–∑–∞–ø—Ä–æ—Å " + u'üì£' + ".\n",
            '–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n- –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n("–ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ –ê–ª–º–∞—Ç–µ?") ' + u'‚õÖ' + '\n- –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã\n("–†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ") ' + u'üîç' + '\n- –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞\n("–∫–æ—Ñ–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º") ' + u'üîÑ' + '\n- –£–∑–Ω–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n("–¥–æ–ª–ª–∞—Ä—ã –≤ —Ç–µ–Ω–≥–µ") ' + u'üí≤' + '\n- –°–æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é\n("–î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º, AIbota") ' + u'üí¨' + "\n* –ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ–∑–∞–ø—Ä–æ—Å " + u'üì£' + ".\n"]
    elif (user_input == '/info') or (
            '–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input or '–ø–æ–¥—Ä–æ–±–Ω–µ–π –æ —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input or '—Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input or '–æ —Å–≤–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input or '–æ —Å–≤–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö' in user_input):
        ans = [
            "–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ\n [ " + u'üì£' + " ] - –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏—Ü–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∞—É–¥–∏–æ –∑–∞–ø—Ä–æ—Å—ã\n [ " + u'‚õÖ' + " –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã] - –£–∑–Ω–∞–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è(–±–ª–∏–∂–∞–π—â–∏–π —á–∞—Å), –∑–∞–≤—Ç—Ä–∞, –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ\n [ " + u'üîç' + " –≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è] - –ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏\n [ " + u'üîÑ' + " –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫] - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞\n [ " + u'üí≤' + " –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç] - –£–∑–Ω–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n [ " + u'üí¨' + " –ë–æ–ª—Ç–∞–ª–∫–∞] - –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å\n",
            "–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ\n [ " + u'üì£' + " ] - –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏—Ü–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∞—É–¥–∏–æ –∑–∞–ø—Ä–æ—Å—ã\n [ " + u'‚õÖ' + " –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã] - –£–∑–Ω–∞–≤–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–µ–≥–æ–¥–Ω—è(–±–ª–∏–∂–∞–π—â–∏–π —á–∞—Å), –∑–∞–≤—Ç—Ä–∞, –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ\n [ " + u'üîç' + " –≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è] - –ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏\n [ " + u'üîÑ' + " –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫] - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞\n [ " + u'üí≤' + " –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –≤–∞–ª—é—Ç] - –£–∑–Ω–∞–≤–∞—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç\n [ " + u'üí¨' + " –ë–æ–ª—Ç–∞–ª–∫–∞] - –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å\n"]
    else:
        serv = ner(user_input)
        print(serv[0])
        if (settings.context["service"] == "weather" and ("–∑–∞–≤—Ç—Ä–∞" in user_input)):
            settings.context["service"] = "weather"
            [service, city, date] = [settings.context["service"], settings.context["city"], "–∑–∞–≤—Ç—Ä–∞"]

            # [service, city, date] = ner(user_input)
            # ans="connct to the api: " + service + " " + " " + city + " " + date

            ans = weatherapp(city, date, user_date)
            print(city)
            if ans[0] == "error":
                ans = ["–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –º–µ—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
                       "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –º–µ—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"]
            name_of_service = "weather"
            return ans, name_of_service
        if serv[0] == "weather":
            settings.context["service"] = "weather"
            [service, city, date] = ner(user_input)
            # [service, city, date] = ner(user_input)
            # ans="connct to the api: " + service + " " + " " + city + " " + date

            ans = weatherapp(city, date, user_date)

            print(city)
            if ans[0] == "error":
                ans = ["–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –º–µ—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞",
                       "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–µ—Å—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –º–µ—Å—Ç–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"]
            name_of_service = "weather"
            return ans, name_of_service
        if serv[0] == "translate":
            [service, textToTranslate, finalLangToTranslate] = ner(user_input)
            ans = translate("", finalLangToTranslate, textToTranslate)
            name_of_service = "translate"
            return [ans, ans], name_of_service
        if serv[0] == "currency":
            settings.context["service"] = "currency"
            [service, finalFirstCurr, finalSecondCurr, curr] = ner(user_input)
            ans = currencyapp(finalFirstCurr, finalSecondCurr, curr)
            name_of_service = "currency"
            return [ans, ans], name_of_service
        if serv[0] == "wiki":
            settings.context["service"] = "wiki"
            [service, query] = ner(user_input)
            print(query)
            ans = wikiapp(query)
            name_of_service = query + "serviceapiwikipedia"
            return [ans, ans], name_of_service
        if serv[0] == "youtube":
            settings.context["service"] = "youtube"
            [service, result] = ner(user_input)
            print(result)
            ans = youtube_search(result)
            name_of_service = "youtube"  # –µ—Å–ª–∏ —ç—Ç–æ –≤–∏–∫–∏–ø–µ–¥–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–º—è —Å–µ—Ä–≤–∏—Å–∞
            return [ans, ans], name_of_service
        if serv == "chitchat" or ans == "":
            settings.context["service"] = "chitchat"
            ans = chat(user_input)
            name_of_service = "chitchat"
            return [ans, ans], name_of_service
    return ans, name_of_service


@bot.message_handler(content_types=["text"])
def repeat_all_messages(message):
    user_input = message.text
    ans = ""
    
    bot.send_chat_action(message.chat.id, 'typing')

    user_date = datetime.fromtimestamp(int(message.date))
    #ans = youtube_search(message.text)
    #bot.send_message(message.chat.id, ans, parse_mode="HTML")

    [ans, name_of_service] = get_answer(user_input, user_date)
    print("Name of service:" + name_of_service)

    if 'serviceapiwikipedia' in name_of_service:  # –µ—Å–ª–∏ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ –±—É–¥–µ—Ç –≤–∏–∫–∏–ø–µ–¥–∏—è
        search_text = name_of_service[:-19]
        wiki_keyboard = types.InlineKeyboardMarkup()  # —Å–æ–∑–¥–∞—é –¥–ª—è –Ω–µ–≥–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        wiki_key_more = types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                                                   callback_data=search_text + " serviceapiwikipedia")  # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏—à
        wiki_keyboard.add(wiki_key_more)  # –¥–æ–±–∞–≤–ª—è—é –∫–ª–∞–≤–∏—à –Ω–∞ –Ω–∞—à—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        wiki_keyboard.add(back_button)
        info = (ans[:200] + '...') if len(ans) > 75 else ans  # —Å–æ–∫—Ä–∞—â–∞—é –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞ –∏–∑ –≤–∏–∫–∏–ø–µ–¥–∏–∏ –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤
        bot.send_message(message.chat.id, text=info,
                         reply_markup=wiki_keyboard)  # –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    else:
        bot.send_message(message.chat.id, ans, parse_mode="HTML", reply_markup=back)

    

@bot.message_handler(content_types=["voice"])
def voice_messages(message):
    data = message.voice

    ans = []

    bot.send_chat_action(message.chat.id, 'typing')

    user_date = datetime.fromtimestamp(int(message.date))

    if (data.file_size > MAX_MESSAGE_SIZE) or (data.duration > MAX_MESSAGE_DURATION):
        reply = ' '.join((
            "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ.",
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {} —Å–µ–∫.".format(MAX_MESSAGE_DURATION),
            "–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ –∫–æ—Ä–æ—á–µ.",
        ))
        return bot.reply_to(message, reply)
    file_url = "https://api.telegram.org/file/bot{}/{}".format(
        bot.token,
        bot.get_file(data.file_id).file_path
    )
    xml_data = requests.post(
        "https://asr.yandex.net/asr_xml?uuid={}&key={}&topic={}&lang={}".format(
            uuid.uuid4().hex,
            YANDEX_KEY,
            'queries',
            VOICE_LANGUAGE
        ),
        data=requests.get(file_url).content,
        headers={"Content-type": 'audio/ogg;codecs=opus'}
    ).content

    e_tree = ElementTree.fromstring(xml_data)

    if not int(e_tree.attrib.get('success', '0')):
        mess = "–ì–æ–≤–æ—Ä–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –∏ —è—Å–Ω–æ, –∞ —Ç–æ –í–∞—Å –ø–ª–æ—Ö–æ —Å–ª—ã—à–Ω–æ"
        t_to_s(mess)
        voice = open('ramazan.opus', 'rb')
        return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id, mess)

    text = e_tree[0].text
    print(text)
    if ('<censored>' in text) or (not text):
        mess = "–ù–µ –ø–æ–Ω—è–ª, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ"
        t_to_s(mess)
        voice = open('ramazan.opus', 'rb')
        return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id, mess)
    user_input = text
    [ans, name_of_service] = get_answer_for_voice(user_input, user_date)
    mess = ans[0]
    txt = ans[1]

    print(txt)
    t_to_s(mess)
    voice = open('ramazan.opus', 'rb')
    if 'serviceapiwikipedia' in name_of_service:  # –µ—Å–ª–∏ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ –±—É–¥–µ—Ç –≤–∏–∫–∏–ø–µ–¥–∏—è
        search_text = name_of_service[:-19]
        wiki_keyboard = types.InlineKeyboardMarkup()  # —Å–æ–∑–¥–∞—é –¥–ª—è –Ω–µ–≥–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        wiki_key_more = types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                                                   callback_data=search_text + " serviceapiwikipedia")  # —Å–æ–∑–¥–∞—é –∫–ª–∞–≤–∏—à
        wiki_keyboard.add(wiki_key_more)  # –¥–æ–±–∞–≤–ª—è—é –∫–ª–∞–≤–∏—à –Ω–∞ –Ω–∞—à—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        wiki_keyboard.add(back_button)
        info = (mess[:200] + '...') if len(txt) > 75 else txt  # —Å–æ–∫—Ä–∞—â–∞—é –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞ –∏–∑ –≤–∏–∫–∏–ø–µ–¥–∏–∏ –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤
        return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id, info, parse_mode="HTML",
                                                                        reply_markup=wiki_keyboard)
    else:
        return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id, ans[1], parse_mode="HTML",
                                                                        reply_markup=back)


'''    
############################################################################################
    if('–ø—Ä–∏–≤–µ—Ç' in text) or ('–∫–∞–∫ –¥–µ–ª–∞' in text):
        mess ="–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?"
        t_to_s(mess)
        voice = open('ramazan.opus', 'rb')
        return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id,mess)

    if('—Ö–æ—Ä–æ—à–æ' in text) or ('—Å–∞–º–∞' in text):
        mess ="–†–∞–¥–∞ —ç—Ç–æ —Å–ª—ã—à–∞—Ç—å. –£ –º–µ–Ω—è —Ç–æ–∂–µ –≤—Å–µ —Ö–æ—Ä–æ—à–æ"
        t_to_s(mess)
        voice = open('ramazan.opus', 'rb')
        return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id,mess)
#####################################################################################################
    mess ="–¢–∞–∫—Å–∞ –µ–¥–µ—Ç –≤ —Ç–∞–∫—Å–∏. –¢–∞–∫—Å–∞ –µ–¥–µ—Ç –≤ —Ç–∞–∫—Å–∏. –¢–∞–∫—Å–∞ –µ–¥–µ—Ç –≤ —Ç–∞–∫—Å–∏. –¢–∞–∫—Å–∞ –µ–¥–µ—Ç –≤ —Ç–∞–∫—Å–∏. –í—Å–µ –ø—Ä–∏–µ—Ö–∞–ª–∏, –º–µ—Ä—Å–∏."
    t_to_s(mess)
    voice = open('ramazan.opus', 'rb')
    return bot.send_voice(message.chat.id, voice), bot.send_message(message.chat.id,mess)
'''


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "callback_back":
            bot.send_message(chat_id=call.message.chat.id,
                             text="–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É:", reply_markup=k)
        elif call.data == "callback_weather":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="<i>–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫, –ø–æ—ç—Ç–æ–º—É –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≤–∏–¥–µ –≤–æ–ø—Ä–æ—Å–æ–≤.</i>"
                                       + "\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ  –≤ –≤–∏–¥–µ  –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:"
                                       + "\n\n<b>–ü–æ–≥–æ–¥–∞ –≤ –ê—Å—Ç–∞–Ω–µ?</b>"
                                       + "\n\n<b>–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ –ê—Å—Ç–∞–Ω–µ?</b>"
                                       + "\n\n<b>–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤ –ê—Å—Ç–∞–Ω–µ?</b>"
                                       + "\n\n<b>–ü–æ–≥–æ–¥–∞ –Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞ –≤ –ê—Å—Ç–∞–Ω–µ?</b>"
                                       + "\n\n<b>–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –ø–æ–≥–æ–¥—É  –≤ –ê—Å—Ç–∞–Ω–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è?</b>",
                                  parse_mode="HTML", reply_markup=back)
        elif call.data == "callback_wikipedia":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="<i>–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫, –ø–æ—ç—Ç–æ–º—É –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å —É –Ω–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞–º –≤–æ–ø—Ä–æ—Å.</i>" +
                                       "\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ  –≤ –≤–∏–¥–µ  –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:" +
                                       "\n\n<b>–†–∞—Å—Å–∫–∞–∂–∏ –æ –≠–ª–∏–∑–∞–≤–µ—Ç –¢–µ–π–ª–æ—Ä?</b>" +
                                       "\n\n<b>–ß—Ç–æ —Ç–∞–∫–æ–π –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥?</b>" +
                                       "\n\n<b>–†–∞—Å—Å–∫–∞–∂–∏ –æ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ</b>" +
                                       "\n\n<b>–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Å–ª–æ–≤–æ '—Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å'?</b>",
                                  parse_mode="HTML", reply_markup=back)
        elif call.data == "callback_currency":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="<i>–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫, –ø–æ—ç—Ç–æ–º—É —á—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å —É –Ω–µ–µ –æ–± —ç—Ç–æ–º.</i>" +
                                       "\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ  –≤ –≤–∏–¥–µ  –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:" +
                                       "\n\n<b>20 –¥–æ–ª–ª–∞—Ä –≤ —Ç–µ–Ω–≥–µ?</b>" +
                                       "\n\n<b>–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 30 –µ–≤—Ä–æ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö?</b>" +
                                       "\n\n<b>–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 100 —Ä—É–±–ª—å –≤ –º–∞—Ä–∫–∞—Ö</b>" +
                                       "\n\n<b>1 –±–∏—Ç–∫–æ–∏–Ω –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö?</b>" +
                                       "\n\n<b>300 —Å–æ–º –≤ —Ç–µ–Ω–≥–µ?</b>",
                                  parse_mode="HTML", reply_markup=back)
        elif call.data == "callback_translate":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="<i>–ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫, –ø–æ—ç—Ç–æ–º—É –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ –∏ —Ç–µ–∫—Å—Ç—ã –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏–≤ –æ–± —ç—Ç–æ–º —É –Ω–µ–µ.</i>" +
                                       "\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ  –≤ –≤–∏–¥–µ  –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–∞–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞:" +
                                       "\n\n<b>'–ö–æ—Å–º–æ—Å' –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º?</b>" +
                                       "\n\n<b>–ö–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è available –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º —è–∑—ã–∫–µ?</b>" +
                                       "\n\n<b>–ö–∞–∫ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—Å—è –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∞–ø—Ç–µ–∫–∞? –Ω–∞ –∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ?</b>" +
                                       "\n\n<b>–ü–µ—Ä–µ–≤–µ–¥–∏ —Å–ª–æ–≤–æ —Ä–∞–∑–æ—á–∞—Ä–æ–≤—ã–≤–∞–µ—à—å –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–∏–π —è–∑—ã–∫?</b>",
                                  parse_mode="HTML", reply_markup=back)
        elif call.data == "callback_bl":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="<i>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è —Ç–æ, —á—Ç–æ –æ–Ω–æ –ø–æ–Ω–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫. </i>" +
                                       "\n\n<b>–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –±–æ—Ç–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É  '–î–∞–≤–∞–π –ø–æ–±–æ–ª—Ç–∞–µ–º'.</b>",
                                  parse_mode="HTML", reply_markup=back)
        ############################################################################################################
        ############################################################################################################
        ############################################################################################################
        elif 'serviceapiwikipedia' in call.data:
            more = call.data[:-19]
            r = wikiapp(more)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=r, reply_markup=back)
        ############################################################################################################
        ############################################################################################################
        ####################################    ########################################################################
        ############################################################################################################


if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    except Exception as err:
        print("–†–∞–∑–æ—Ä–≤–∞–Ω–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
